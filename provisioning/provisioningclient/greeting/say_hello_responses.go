// Code generated by go-swagger; DO NOT EDIT.

package greeting

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"labnrpc/provisioning/provisioningclient/models"
)

// SayHelloReader is a Reader for the SayHello structure.
type SayHelloReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SayHelloReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSayHelloOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewSayHelloDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSayHelloOK creates a SayHelloOK with default headers values
func NewSayHelloOK() *SayHelloOK {
	return &SayHelloOK{}
}

/*
SayHelloOK describes a response with status code 200, with default header values.

A successful response.
*/
type SayHelloOK struct {
	Payload *models.ProvisioningpbSayHelloResponse
}

// IsSuccess returns true when this say hello o k response has a 2xx status code
func (o *SayHelloOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this say hello o k response has a 3xx status code
func (o *SayHelloOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this say hello o k response has a 4xx status code
func (o *SayHelloOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this say hello o k response has a 5xx status code
func (o *SayHelloOK) IsServerError() bool {
	return false
}

// IsCode returns true when this say hello o k response a status code equal to that given
func (o *SayHelloOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the say hello o k response
func (o *SayHelloOK) Code() int {
	return 200
}

func (o *SayHelloOK) Error() string {
	return fmt.Sprintf("[POST /api/provisioning/hello][%d] sayHelloOK  %+v", 200, o.Payload)
}

func (o *SayHelloOK) String() string {
	return fmt.Sprintf("[POST /api/provisioning/hello][%d] sayHelloOK  %+v", 200, o.Payload)
}

func (o *SayHelloOK) GetPayload() *models.ProvisioningpbSayHelloResponse {
	return o.Payload
}

func (o *SayHelloOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProvisioningpbSayHelloResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSayHelloDefault creates a SayHelloDefault with default headers values
func NewSayHelloDefault(code int) *SayHelloDefault {
	return &SayHelloDefault{
		_statusCode: code,
	}
}

/*
SayHelloDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type SayHelloDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this say hello default response has a 2xx status code
func (o *SayHelloDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this say hello default response has a 3xx status code
func (o *SayHelloDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this say hello default response has a 4xx status code
func (o *SayHelloDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this say hello default response has a 5xx status code
func (o *SayHelloDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this say hello default response a status code equal to that given
func (o *SayHelloDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the say hello default response
func (o *SayHelloDefault) Code() int {
	return o._statusCode
}

func (o *SayHelloDefault) Error() string {
	return fmt.Sprintf("[POST /api/provisioning/hello][%d] sayHello default  %+v", o._statusCode, o.Payload)
}

func (o *SayHelloDefault) String() string {
	return fmt.Sprintf("[POST /api/provisioning/hello][%d] sayHello default  %+v", o._statusCode, o.Payload)
}

func (o *SayHelloDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *SayHelloDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
